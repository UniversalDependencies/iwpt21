#!/usr/bin/env perl
# Runs UDPipe on the IWPT 2020 shared task test data.
# Copyright Â© 2020 Dan Zeman <zeman@ufal.mff.cuni.cz>
# License: GNU GPL

use utf8;
use open ':utf8';
binmode(STDIN, ':utf8');
binmode(STDOUT, ':utf8');
binmode(STDERR, ':utf8');
use Getopt::Long;

my %config;
# If no enhancer is specified, the basic tree generated by UDPipe will be copied
# to the enhanced graph. If 'stanford' is specified, we will run the Stanford
# Enhancer instead.
$config{enhancer} = '';
GetOptions
(
    'enhancer=s' => \$config{enhancer}
);

my $udpipe = '/home/zeman/nastroje/udpipe/udpipe-1.2.0-bin/bin-linux64/udpipe';
my $copybe = '/net/work/people/zeman/unidep/tools/conllu-copy-basic-to-enhanced.pl --replace';
my $stanford = '/net/work/people/zeman/unidep/shared-tasks/iwpt2020/_private/tools/stanford_enhancer.sh';
my $quickfix = '/net/work/people/zeman/unidep/tools/conllu-quick-fix.pl';
# Models downloaded from http://hdl.handle.net/11234/1-3131.
my $model_path = '/net/work/people/zeman/udpipe-models/models';
my %models =
(
    'ar' => 'arabic-padt-ud-2.5-191206.udpipe',
    'bg' => 'bulgarian-btb-ud-2.5-191206.udpipe',
    'cs' => 'czech-pdt-ud-2.5-191206.udpipe',
    'nl' => 'dutch-alpino-ud-2.5-191206.udpipe',
    'en' => 'english-ewt-ud-2.5-191206.udpipe',
    'et' => 'estonian-edt-ud-2.5-191206.udpipe',
    'fi' => 'finnish-tdt-ud-2.5-191206.udpipe',
    'fr' => 'french-gsd-ud-2.5-191206.udpipe',
    'it' => 'italian-isdt-ud-2.5-191206.udpipe',
    'lv' => 'latvian-lvtb-ud-2.5-191206.udpipe',
    'lt' => 'lithuanian-alksnis-ud-2.5-191206.udpipe',
    'pl' => 'polish-pdb-ud-2.5-191206.udpipe',
    'ru' => 'russian-syntagrus-ud-2.5-191206.udpipe',
    'sk' => 'slovak-snk-ud-2.5-191206.udpipe',
    'sv' => 'swedish-talbanken-ud-2.5-191206.udpipe',
    'ta' => 'tamil-ttb-ud-2.5-191206.udpipe',
    'uk' => 'ukrainian-iu-ud-2.5-191206.udpipe'
);
my %languages =
(
    'ar' => 'Arabic',
    'bg' => 'Bulgarian',
    'cs' => 'Czech',
    'nl' => 'Dutch',
    'en' => 'English',
    'et' => 'Estonian',
    'fi' => 'Finnish',
    'fr' => 'French',
    'it' => 'Italian',
    'lv' => 'Latvian',
    'lt' => 'Lithuanian',
    'pl' => 'Polish',
    'ru' => 'Russian',
    'sk' => 'Slovak',
    'sv' => 'Swedish',
    'ta' => 'Tamil',
    'uk' => 'Ukrainian'
);
my $input_path = '/net/work/people/zeman/unidep/shared-tasks/iwpt2020/_private/data/test-blind';
my $output_path = '/net/work/people/zeman/unidep/shared-tasks/iwpt2020/_private/data/test-baseline'; # + number
if($config{enhancer} eq 'stanford')
{
    $output_path .= '3';
}
else
{
    $output_path .= '2';
}
foreach my $language (qw(ar bg cs nl en et fi fr it lv lt pl ru sk sv ta uk))
{
    # We have to normalize Unicode to make the output file valid. I do not know
    # how it is possible but UDPipe produces unnormalized text for Arabic.
    # Also, in Swedish, UDPipe generated a lemma with a trailing whitespace, which is invalid.
    my $command = "$udpipe --tokenize --tag --parse $model_path/$models{$language} $input_path/$language.txt";
    if($config{enhancer} eq 'stanford')
    {
        $command .= " | $quickfix > $output_path/$language.conllu ; $stanford $output_path/$language.conllu $languages{$language}";
    }
    else
    {
        $command .= " | $copybe | $quickfix > $output_path/$language.conllu";
    }
    print("$command\n");
    system($command);
}
